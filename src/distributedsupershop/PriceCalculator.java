package distributedsupershop;

import java.awt.Image;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;

public class PriceCalculator extends javax.swing.JFrame {
    DataBaseConnection db; double sum;
    static int status;
    public PriceCalculator(int status) throws IOException {
        PriceCalculator.status=status;
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        initComponents();
        setContentPane(new javax.swing.JLabel(new ImageIcon(
                    "shade13.png")));            
        try { 
            jLabel2.setIcon(new ImageIcon(ImageIO.read(new java.io.File("Cart.png")
            ).getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(),
                    Image.SCALE_SMOOTH)));
            /*jLabel2.setIcon(new ImageIcon(ImageIO.read(new java.io.File("admin.png")
            ).getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(),
                    Image.SCALE_SMOOTH)));
            jLabel3.setIcon(new ImageIcon(ImageIO.read(new java.io.File("employee.png")
            ).getScaledInstance(jLabel3.getWidth(), jLabel3.getHeight(),
                    Image.SCALE_SMOOTH)));
            jLabel4.setIcon(new ImageIcon(ImageIO.read(new java.io.File("login.png")
            ).getScaledInstance(jLabel4.getWidth(), jLabel4.getHeight(),
                    Image.SCALE_SMOOTH)));
            jLabel5.setIcon(new ImageIcon(ImageIO.read(new java.io.File("exit.png")
            ).getScaledInstance(jLabel5.getWidth(), jLabel5.getHeight(),
                    Image.SCALE_SMOOTH)));*/
        } catch (IOException ex) {
            System.out.println(ex);
        }
            db = new DataBaseConnection();
            new Thread(){@Override
            public void run(){
            while(true){
                java.util.Date date = new java.util.Date();
                jLabel1.setText(date.toString());
                try{sleep(500);} catch(InterruptedException ex){System.out.println(ex);}
            }}}.start();
            add(backButton);add(jButton10);add(jButton4);add(jButton5);add(jButton6);
            add(jCheckBox1);add(jLabel1);
            add(jLabel10);add(jLabel11);add(jLabel12);add(jLabel2);add(jLabel4);add(jLabel5);
            add(jLabel6);add(jLabel8);
            add(jRadioButton1);add(jRadioButton2);add(jScrollPane2);add(jTextField2);add(jTextField3);
            add(jTextField5);add(jTextField6);
            jDialog3.setLocationRelativeTo(null);
            jRadioButton1.setEnabled(false);
            jRadioButton2.setEnabled(false);
            jTextField6.setEnabled(false);
}

    public static double round(double value, int places) {
    if (places < 0) throw new IllegalArgumentException();

    BigDecimal bd = new BigDecimal(Double.toString(value));
    bd = bd.setScale(places, RoundingMode.HALF_UP);
    return bd.doubleValue();
}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog3 = new javax.swing.JDialog();
        jLabel10 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        backButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jDialog3.setBackground(new java.awt.Color(255, 255, 51));
        jDialog3.setUndecorated(true);
        jDialog3.setSize(new java.awt.Dimension(404, 249));

        jLabel10.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 153, 153));
        jLabel10.setText("New Quantity :");

        jTextField5.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(0, 153, 153));
        jTextField5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextField5.setOpaque(false);
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(255, 255, 102));
        jButton10.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jButton10.setForeground(new java.awt.Color(0, 153, 153));
        jButton10.setText("Cancel");
        jButton10.setContentAreaFilled(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog3Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10)
                    .addGroup(jDialog3Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog3Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jButton10)
                .addGap(52, 52, 52))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("jLabel1");

        jButton4.setBackground(new java.awt.Color(153, 204, 255));
        jButton4.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Done");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(0, 102, 102));
        jTextField2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        jTextField3.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(0, 102, 102));
        jTextField3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Product ID:");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Quantity:");

        jButton6.setBackground(new java.awt.Color(153, 204, 255));
        jButton6.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Exit");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(204, 255, 255));
        jLabel8.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Total=                    ");

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setBackground(new java.awt.Color(153, 204, 255));
        jTable2.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        jTable2.setForeground(new java.awt.Color(255, 255, 255));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Product ID", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setDropMode(javax.swing.DropMode.INSERT_ROWS);
        jTable2.setFillsViewportHeight(true);
        jTable2.setIntercellSpacing(new java.awt.Dimension(2, 2));
        jTable2.setSelectionBackground(new java.awt.Color(204, 255, 0));
        jTable2.setSelectionForeground(new java.awt.Color(204, 51, 0));
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable2KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton5.setBackground(new java.awt.Color(153, 204, 255));
        jButton5.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Refresh");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Cashing");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("Update store credit");
        jRadioButton2.setOpaque(false);

        jLabel11.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Member ID:");

        jTextField6.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(0, 102, 102));
        jTextField6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("Pay with store credit");
        jRadioButton1.setOpaque(false);

        jCheckBox1.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("For Members");
        jCheckBox1.setOpaque(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(153, 204, 255));
        backButton.setFont(new java.awt.Font("Calibri Light", 0, 20)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Calibri Light", 0, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Distributed SuperShop System");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 334, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(456, 456, 456))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(306, 306, 306))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(88, 88, 88)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jRadioButton2)
                    .addComponent(jCheckBox1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton5)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(99, 99, 99))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jCheckBox1)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(jRadioButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton5))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backButton)
                            .addComponent(jButton6)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(112, 112, 112))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int payOrupdate,member_id=0,receipt_id=0;
        if(jCheckBox1.isSelected()){
            try{if(jTextField6.getText().equals("")){JOptionPane.showMessageDialog(this.getContentPane(), "Input can't be empty"); return;}
                member_id= Integer.parseInt(jTextField6.getText());
                if(jRadioButton1.isSelected()){payOrupdate=1;}
                else if(jRadioButton2.isSelected()){payOrupdate=2;}
                else {JOptionPane.showMessageDialog(this.getContentPane(), "Select an option"); return;}
            
                if(! isMemberInThisBranch(member_id,payOrupdate,sum)){
                    if(! isMemberInOtherBranches(member_id,payOrupdate,sum)){
                        JOptionPane.showMessageDialog(this.getContentPane(),"Invalid Member ID"); return;
                    }
                }
            }
            catch(Exception e){System.out.println(e);
                JOptionPane.showMessageDialog(this.getContentPane(), "Give appropriate input"); return;}
        }
        sum = round(sum,2);
        jLabel8.setText("Total=                    "+sum);
        ((DefaultTableModel)jTable2.getModel()).addRow(new Object[]{"","","Total =",sum});
        ((AbstractTableModel)jTable2.getModel()).fireTableDataChanged();
        
        try{
            db.rs=db.stmt.executeQuery("select max(receipt_id) from history");
            if(db.rs.next()){receipt_id = db.rs.getInt(1); receipt_id++; System.out.println(receipt_id);}
        }catch(SQLException e){System.out.println(e);}
        
        int rowcount= jTable2.getRowCount(); int i=0;
        while(i<rowcount-1){
            try{
                String Product_amount_string= jTable2.getValueAt(i, 2).toString().substring(0, jTable2.getValueAt(i, 2).toString().indexOf(" "));
                String unit = jTable2.getValueAt(i, 2).toString().substring(jTable2.getValueAt(i, 2).toString().indexOf(" ")+1);
                System.out.println(Product_amount_string);
                float Product_amount=Float.parseFloat(Product_amount_string );
                System.out.println(jTable2.getValueAt(i, 1).toString());
                int Product_id= Integer.parseInt( jTable2.getValueAt(i, 1).toString());
                i++;
                db.stmt.executeUpdate("update products set Product_amount= Product_amount - "+Product_amount+" where product_id= "+Product_id);
                if(jCheckBox1.isSelected()){
                    db.stmt.executeQuery("insert into History values ("+receipt_id+","+member_id+","+Product_id+",LOCALTIMESTAMP,"+Product_amount+",'"+unit+"')");
                }
                else{
                    db.stmt.executeQuery("insert into History (Receipt_id, Product_id, Time, Amount,Unit) values ("+receipt_id+","+Product_id+",LOCALTIMESTAMP,"+Product_amount+",'"+unit+"')");
                }
            }
            catch(Exception e){System.out.println(e);}
                }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            db.con.close();
            System.exit(0);
        } 
        catch (SQLException ex) {System.out.println(ex);}
    }//GEN-LAST:event_jButton6ActionPerformed
    
    public void meth (int Product_id,float Product_amount){
        try {
            db.rs=db.stmt.executeQuery("select Product_name, Price, Product_unit,Product_amount from Products where product_id="+Product_id);
            while(db.rs.next()){
                String name= db.rs.getString(1);
                double price = (double) db.rs.getFloat(2);
                String unit= db.rs.getString(3);
                float Present_amount=  db.rs.getFloat(4);
                if(Present_amount>=Product_amount){
                    db.rs2=db.stmt2.executeQuery("select Discount_amount from discount where product_id= "+Product_id +" and sysDate between start_date and end_date");
                    if (db.rs2.next()) {
                        price= price-price*((double)db.rs2.getFloat(1)/100); 
                        System.out.println(price);
                        price = round(price, 2);
                        System.out.println(price);
                    }
                    ((DefaultTableModel)jTable2.getModel()).addRow(new Object[]{name,Product_id,Product_amount+" "+ unit,Product_amount*price});
                    ((AbstractTableModel)jTable2.getModel()).fireTableDataChanged();
                    int row_count=((DefaultTableModel)jTable2.getModel()).getRowCount(); sum=0;
                    for(int i=0; i<row_count;i++){ 
                        sum=sum+(double)((DefaultTableModel)jTable2.getModel()).getValueAt(i, 3);
                    }
                sum = round(sum,2);
                jLabel8.setText("Total=                    "+sum);
                jTextField2.setText("");jTextField3.setText("");}
                else JOptionPane.showMessageDialog(this.getContentPane(), "Specified amount is more than present amount");
            }
        } catch (Exception ex) {System.out.println(ex);} 
    }
    
    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        if (evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
                if(jTextField2.getText().equals("")||jTextField3.getText().equals("")){
                JOptionPane.showMessageDialog(this.getContentPane(), "Input can't be empty");
            }
            try{
                int Product_id= Integer.parseInt(jTextField2.getText());
                float Product_amount= Float.parseFloat(jTextField3.getText());
                meth(Product_id,Product_amount);
                }
            catch(Exception e){System.out.println(e);
                JOptionPane.showMessageDialog(this.getContentPane(), "Give appropriate input");}
        }
    }//GEN-LAST:event_jTextField3KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        if (evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            if(jTextField2.getText().equals("")||jTextField3.getText().equals("")){
                JOptionPane.showMessageDialog(this.getContentPane(), "Input can't be empty");
            }
            try{
                int Product_id= Integer.parseInt(jTextField2.getText());
                float Product_amount= Float.parseFloat(jTextField3.getText());
                meth(Product_id,Product_amount);
                }
            catch(Exception e){ System.out.println(e);
                JOptionPane.showMessageDialog(this.getContentPane(), "Give appropriate input");}
        }
    }//GEN-LAST:event_jTextField2KeyPressed

    private boolean isMemberInOtherBranches(int customer_id,int payOrupdate, double price){
        try {
            DataBaseConnection db = new DataBaseConnection();
            db.rs = db.stmt.executeQuery("select Branch_id, Branch_ipaddress,Branch_port from Branches ");
            while(db.rs.next()){
                int Branch_id = db.rs.getInt("Branch_id");
                String Branch_ipaddress = db.rs.getString("Branch_ipaddress");
                int Branch_port = db.rs.getInt("Branch_port");
                Client client= new Client(Branch_ipaddress, Branch_port);
                client.printStrm.println(2);
                client.printStrm.println(customer_id);
                boolean result =client.scanner.nextBoolean();
                if(result){
                    client.printStrm.println(price);
                    client.printStrm.println(payOrupdate);
                    price = client.scanner.nextDouble(); System.out.println("client : "+ price);
                    sum = round(price,2);
                    client.s.close(); return true;
                }
                client.s.close();
            }
            return false;
        } catch (SQLException | IOException ex) {
            System.out.println(ex); return false;
        }
    }
    
    private boolean isMemberInThisBranch(int customer_id,int payOrupdate, double price){
        try {
            DataBaseConnection db = new DataBaseConnection();
            db.rs = db.stmt.executeQuery("select Membership_points from Customer where Customer_id ="+customer_id+" and sysDate between Membership_start and Membership_end");
            while(db.rs.next()){
                double Membership_points = (double) db.rs.getFloat("Membership_points");
                if(payOrupdate==1){
                    if(price >= Membership_points){
                        price = price - Membership_points;
                        Membership_points=0;
                    }
                    else{
                        Membership_points = Membership_points - price;
                        price = 0;
                    }
                }
                else{
                    Membership_points = round(Membership_points+ (price*0.03),2);
                }
                db.rs = db.stmt.executeQuery
                                ("update Customer set Membership_points = "+Membership_points+" where Customer_id ="+customer_id);
                sum =round(price,2);
                return true;
            }
            return false;
        } catch (SQLException ex) {
            System.out.println(ex); return false;
        }
    }
            
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        setVisible(false); dispose(); try {
            new PriceCalculator(status).setVisible(true);
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed
int row;
    private void jTable2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyPressed
        if (evt.getKeyCode()==java.awt.event.KeyEvent.VK_DELETE){
            row= jTable2.getSelectedRow();
            ((DefaultTableModel)jTable2.getModel()).removeRow(row);
            if(row!=0){
            ((AbstractTableModel)jTable2.getModel()).fireTableRowsDeleted(0, row-1);}
            int row_count=((DefaultTableModel)jTable2.getModel()).getRowCount(); sum=0;
            for(int i=0; i<row_count;i++){ 
                sum=sum+(double)((DefaultTableModel)jTable2.getModel()).getValueAt(i, 3);
            }
            sum = round(sum,2);
            jLabel8.setText("Total=                    "+sum);
        }
        if (evt.getKeyCode()==java.awt.event.KeyEvent.VK_BACK_SPACE){
            row= jTable2.getSelectedRow();
            int column= jTable2.getSelectedColumn();
            if(column==2){jDialog3.setVisible(true); setVisible(false);}
        }
    }//GEN-LAST:event_jTable2KeyPressed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed
        if (evt.getKeyCode()==java.awt.event.KeyEvent.VK_ENTER){
            try {float new_Product_amount=Float.parseFloat(jTextField5.getText());
                row= jTable2.getSelectedRow();
                String Product_amount_string= jTable2.getValueAt(row, 2).toString().substring(0, jTable2.getValueAt(row, 2).toString().indexOf(" "));
                String unit = jTable2.getValueAt(row, 2).toString().substring(jTable2.getValueAt(row, 2).toString().indexOf(" ")+1);
                float Product_amount=Float.parseFloat(Product_amount_string );
                double price = Double.parseDouble(jTable2.getValueAt(row, 3).toString());
                price = price / (double)Product_amount;
                double new_price= price * new_Product_amount;
                
                ((DefaultTableModel)jTable2.getModel()).setValueAt(new_Product_amount+" "+unit,row,2);
                ((AbstractTableModel)jTable2.getModel()).fireTableDataChanged();
                ((DefaultTableModel)jTable2.getModel()).setValueAt(new_price,row,3);
                ((AbstractTableModel)jTable2.getModel()).fireTableDataChanged();
                int row_count=((DefaultTableModel)jTable2.getModel()).getRowCount(); sum=0;
                for(int i=0; i<row_count;i++){ 
                    sum=sum+(double)((DefaultTableModel)jTable2.getModel()).getValueAt(i, 3);
                }
                sum = round(sum,2);
                jLabel8.setText("Total=                    "+sum);
            } catch (Exception ex) {System.out.println(ex);}
            jTextField5.setText(null);
            jDialog3.setVisible(false); setVisible(true);
        }
    }//GEN-LAST:event_jTextField5KeyPressed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        jTextField5.setText(null); this.setVisible(true);
        jDialog3.setVisible(false);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(!jCheckBox1.isSelected()){
            jRadioButton1.setEnabled(false);
            jRadioButton2.setEnabled(false);
            jTextField6.setEnabled(false);
            buttonGroup1.clearSelection();
            jTextField6.setText("");
        }
        else{jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jTextField6.setEnabled(true);}
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        try {
            this.setVisible(false);this.dispose();
            new Menu(status).setVisible(true);
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PriceCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PriceCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PriceCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PriceCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PriceCalculator(status).setVisible(true);
                } catch (IOException ex) {}
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
